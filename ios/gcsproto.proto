syntax = "proto3";

package gcsproto;

option go_package = ".;gcsproto";

option java_multiple_files = true;
option java_package = "com.presen.grpc";
option java_outer_classname = "GRPC";

option objc_class_prefix = "GRPC";

service Service {
  // test
  rpc HelloWorld(MsgPullDataReq) returns (MsgSimpleRsp) {}
  // for GDCP to upload controller & devices data
  rpc UploadData(MsgUploadDataReq) returns (MsgSimpleRsp) {}
  // GDCP bi-direction API
  rpc Sync(stream MsgUploadDataReq) returns (stream MsgSimpleRsp) {}
  // for cloud GRPC long-live connection
  rpc PullData(stream MsgPullDataReq) returns (stream MsgSimpleRsp) {}
}

message MsgUploadDataReq {
  // metadata:
  //  x-sn: xxxx
  //  x-salt: xxxx
  //  x-api-key: xxxx
  int32 dataType = 1;
  bytes data = 2;
}

message MsgSimpleRsp {
  int32 status = 1;
  bytes payload = 2;
}

message MsgPullDataReq {
  // metadata:
  //  x-sn: xxxx
  //  x-uuid: xxxx
  //  x-api-key: xxxx
  // 
  // data: 
  //  {event: "init", queue: ["controller", "devices"], device_ids: ["2", "4"]}
  //  {event: "heartbeat"}
  // string type = 1; // t | h, t: 文本, h: 加密
  string data = 2; // json raw string: 
}